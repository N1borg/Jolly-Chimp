services:

  database:
    image: mysql:8.0
    container_name: jollychimp_mysql
    restart: unless-stopped
    environment:
      MYSQL_HOST: database
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    networks:
      - backend
    volumes:
      - ./mysql_data:/var/lib/mysql
      - ./database/sql_schemas/setup.sql:/docker-entrypoint-initdb.d/setup.sql
      - ./database/sql_schemas/pihole.sql:/docker-entrypoint-initdb.d/pihole.sql
      - ./database/sql_schemas/websites.sql:/docker-entrypoint-initdb.d/websites.sql

  scraper:
    build: scraper
    container_name: jollychimp_scraper
    restart: unless-stopped
    depends_on:
      - database
    environment:
      MYSQL_HOST: database
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      PIHOLE_HOST: ${PIHOLE_HOST}
      PIHOLE_API_KEY: ${PIHOLE_API_KEY}
    networks:
      - backend

  api:
    build: api
    container_name: jollychimp_api
    restart: unless-stopped
    environment:
      MYSQL_HOST: database
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "8000:8000"
    networks:
      - backend
      - frontend

  # frontend:
  #   build: frontend
  #   container_name: jollychimp_frontend
  #   restart: unless-stopped
  #   ports:
  #     - "3000:80"
  #   depends_on:
  #     - api
  #   networks:
  #     - frontend

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge
